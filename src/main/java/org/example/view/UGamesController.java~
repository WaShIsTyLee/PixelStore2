import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import org.example.Model.Videojuego;

import java.util.List;

public class UGamesController extends Controller implements Initializable {

    @FXML
    private ListView<Videojuego> videojuegos;

    // Lista para almacenar los videojuegos seleccionados
    private ObservableList<Videojuego> seleccionados = FXCollections.observableArrayList();

    public void initialize() {
        videojuegos.setCellFactory(lv -> new ListCell<>() {
            @Override
            protected void updateItem(Videojuego item, boolean empty) {
                super.updateItem(item, empty);
                if (empty || item == null) {
                    setText(null);
                    setGraphic(null);
                } else {
                    // Contenedor principal para cada celda
                    HBox container = new HBox();
                    container.setSpacing(10);
                    container.setStyle("-fx-padding: 10; -fx-border-color: black; -fx-border-width: 2; -fx-border-radius: 5; -fx-background-color: lightgray;");

                    // Crear CheckBox (sin texto)
                    CheckBox checkBox = new CheckBox();
                    checkBox.setOnAction(event -> {
                        if (checkBox.isSelected()) {
                            if (!seleccionados.contains(item)) {
                                seleccionados.add(item); // Agregar a la lista de seleccionados
                            }
                        } else {
                            seleccionados.remove(item); // Eliminar de la lista si se deselecciona
                        }
                    });

                    // Crear Labels para la información del videojuego
                    Label nombre = new Label("Nombre: " + item.getNombre());
                    Label precio = new Label("Precio: $" + String.format("%.2f", item.getPrecio()));
                    Label descripcion = new Label("Descripción: " + item.getDescripcion());
                    Label desarrollador = new Label("Desarrollador: " + item.getDesarrollador().getNombre());
                    descripcion.setWrapText(true);

                    // Crear un VBox para contener las etiquetas (nombre, precio, descripción, desarrollador)
                    VBox infoContainer = new VBox(nombre, precio, descripcion, desarrollador);
                    infoContainer.setSpacing(5);

                    // Crear un HBox para el CheckBox y añadir un pequeño margen superior
                    HBox checkBoxContainer = new HBox(checkBox);
                    VBox.setMargin(checkBoxContainer, new javafx.geometry.Insets(-5, 0, 5, 0));  // Mueve el CheckBox hacia arriba

                    // Agregar el CheckBox y el VBox al contenedor principal (HBox)
                    container.getChildren().addAll(checkBoxContainer, infoContainer);

                    // Establecer el gráfico de la celda
                    setGraphic(container);
                }
            }
        });

        // Aquí se debe establecer la lista de juegos en la ListView
        // videojuegos.setItems(this.games); // Asumiendo que games es una lista observable de videojuegos
    }

    // Función que devuelve los videojuegos seleccionados
    public ObservableList<Videojuego> getSeleccionados() {
        return seleccionados;
    }
}
